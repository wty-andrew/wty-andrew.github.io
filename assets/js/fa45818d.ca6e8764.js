"use strict";(self.webpackChunkwty_blog=self.webpackChunkwty_blog||[]).push([[542],{3232:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>k,default:()=>R,frontMatter:()=>f,metadata:()=>b,toc:()=>v});var o=a(7462),n=a(7294),r=a(3905),i=a(6493),s=a(9251),l=a(5823),p=a(2761),d=a(4996);const m=e=>{const t=(0,d.Z)(`/models/${e}`),[a,o]=(0,n.useState)(null);return(0,n.useEffect)((()=>{const a=new p.Z;a.packages={clownbot_description:t},a.load(`${t}/urdf/${e}.urdf`,(e=>{e.rotation.x=-Math.PI/2,e.traverse((e=>e.castShadow=!0)),e.updateMatrixWorld(!0),o(e)}))}),[e]),a},c=()=>{const e=m("clownbot");return e&&n.createElement("primitive",{object:e,dispose:null})},h=()=>{const e=m("clownbot");return(0,s.xQ)((t=>{let{clock:{elapsedTime:a}}=t;if(e){const t=15*a,o=1.2*a;e.joints.base_link_to_left_wheel.setJointValue(t),e.joints.base_link_to_right_wheel.setJointValue(t),e.position.set(.5*Math.sin(o),0,.5*Math.cos(o)),e.rotation.set(-Math.PI/2,0,o)}})),e&&n.createElement("primitive",{object:e,dispose:null})},u=e=>{let{children:t,...a}=e;return n.createElement(s.Xz,a,n.createElement(n.Suspense,{fallback:null},n.createElement(l.z,null),n.createElement("ambientLight",{intensity:.15}),n.createElement("directionalLight",{position:[-4,5,1]}),t))},f={title:"Load URDF with React Three Fiber"},k=void 0,b={unversionedId:"misc/r3f-urdf",id:"misc/r3f-urdf",title:"Load URDF with React Three Fiber",description:"URDF is the abbreviation of Unified Robot Description Format, which is an XML format for representing a robot model in ROS, we can display a model like above in browser with react three fiber through urdf-loaders.",source:"@site/notes/misc/r3f-urdf.mdx",sourceDirName:"misc",slug:"/misc/r3f-urdf",permalink:"/misc/r3f-urdf",draft:!1,tags:[],version:"current",frontMatter:{title:"Load URDF with React Three Fiber"},sidebar:"tutorialSidebar",previous:{title:"Misc",permalink:"/category/misc"},next:{title:"Unorganized",permalink:"/category/unorganized"}},g={},v=[{value:"Setup",id:"setup",level:2},{value:"Option 1",id:"option-1",level:3},{value:"Option 2",id:"option-2",level:3},{value:"Make the Model Move",id:"make-the-model-move",level:2},{value:"Notes",id:"notes",level:2}],w={toc:v},N="wrapper";function R(e){let{components:t,...a}=e;return(0,r.kt)(N,(0,o.Z)({},w,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{style:{height:400}},(0,r.kt)(u,{camera:{position:[.2,.2,.2]},mdxType:"Viewer"},(0,r.kt)(c,{mdxType:"StaticModel"}))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://wiki.ros.org/urdf"},"URDF")," is the abbreviation of Unified Robot Description Format, which is an XML format for representing a robot model in ROS, we can display a model like above in browser with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pmndrs/react-three-fiber"},"react three fiber"),(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," through ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pmndrs/react-three-fiber"},"urdf-loaders"),"."),(0,r.kt)("p",null,"In URDF, the location of a mesh file is specified under the ",(0,r.kt)("inlineCode",{parentName:"p"},"filename")," attribute of a mesh element with the format: ",(0,r.kt)("inlineCode",{parentName:"p"},"package://<package_name>/path/to/<mesh_name>"),", for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="my_pkg/urdf/foo.urdf" {3}',title:'"my_pkg/urdf/foo.urdf"',"{3}":!0},'...\n<geometry>\n  <mesh filename="package://my_pkg/meshes/bar.dae"/>\n</geometry>\n...\n')),(0,r.kt)("p",null,"However, URDF Loader doesn't know where to fetch the mesh files from the given path, we have two options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"edit the URDF file by replacing all the ",(0,r.kt)("inlineCode",{parentName:"li"},"package://<package_name>")," part with the relative path"),(0,r.kt)("li",{parentName:"ul"},"use the ",(0,r.kt)("inlineCode",{parentName:"li"},"packages")," option",(0,r.kt)("sup",{parentName:"li",id:"fnref-2"},(0,r.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2"))," of URDF Loader to resolve the paths")),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"Consider the following ROS package structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt",metastring:"{3-7}","{3-7}":!0},"my_pkg/\n\u251c\u2500\u2500 launch/\n\u251c\u2500\u2500 meshes/\n\u2502   \u251c\u2500\u2500 bar.dae\n\u2502   \u2514\u2500\u2500 baz.dae\n\u251c\u2500\u2500 urdf/\n\u2502   \u2514\u2500\u2500 foo.urdf\n\u251c\u2500\u2500 CMakeLists.txt\n\u2514\u2500\u2500 package.xml\n")),(0,r.kt)("p",null,"The mesh/URDF files should be copied into the public (static assets) folder of web server, assume no prefix for static files url"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt",metastring:"{4-10}","{4-10}":!0},"app/\n\u251c\u2500\u2500 src/\n\u251c\u2500\u2500 public/\n\u2502   \u251c\u2500\u2500 models/\n\u2502   \u2502   \u2514\u2500\u2500 foo/\n\u2502   \u2502       \u251c\u2500\u2500 meshes/\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 bar.dae\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 baz.dae\n\u2502   \u2502       \u2514\u2500\u2500 urdf/\n\u2502   \u2502           \u2514\u2500\u2500 foo.urdf\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 package.json\n")),(0,r.kt)("h3",{id:"option-1"},"Option 1"),(0,r.kt)("p",null,"Simply change all the occurrence of ",(0,r.kt)("inlineCode",{parentName:"p"},"package://my_pkg")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"..")," in URDF file, then use the ",(0,r.kt)("inlineCode",{parentName:"p"},"useLoader")," hook from r3f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useLoader } from '@react-three/fiber'\nimport URDFLoader, { URDFRobot } from 'urdf-loader'\n\nconst FOO_URDF_URL = './models/foo/urdf/foo.urdf'\n\nconst Model = () => {\n  const robot: URDFRobot = useLoader(URDFLoader as any, FOO_URDF_URL)\n  // do whatever setup with the robot...\n  return <primitive object={robot} />\n}\n")),(0,r.kt)("h3",{id:"option-2"},"Option 2"),(0,r.kt)("p",null,"We need to initialize ",(0,r.kt)("inlineCode",{parentName:"p"},"URDFLoader")," ourselves in order to remap the packages, basically create a dumb version of ",(0,r.kt)("inlineCode",{parentName:"p"},"useLoader"),", it doesn't have suspense / cache support so is less convenient"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{8-10}","{8-10}":!0},"import { useEffect, useState } from 'react'\nimport URDFLoader, { URDFRobot } from 'urdf-loader'\n\nconst Model = () => {\n  const [robot, setRobot] = useState<URDFRobot>()\n  useEffect(() => {\n    const loader = new URDFLoader()\n    loader.packages = {\n      my_pkg: './models/foo',\n    }\n    loader.load(`./models/foo/urdf/foo.urdf`, (robot) => {\n      // do whatever setup with the robot...\n      setRobot(robot)\n    })\n  }, [])\n  return robot && <primitive object={robot} />\n}\n")),(0,r.kt)("h2",{id:"make-the-model-move"},"Make the Model Move"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"URDFRobot")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"Object3D"),", it also provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"setJointValue")," function that would take joint type into account."),(0,r.kt)("p",null,"Here's an example that changes the robot position and wheel joint values"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const maxVel = 0.6\nconst wheelRadius = 0.04\nconst trackRadius = 0.5\n\nconst Model = () => {\n  // load robot as above ...\n\n  useFrame(({ clock: { elapsedTime } }) => {\n    if (robot) {\n      // the wheels should really rotate at different speed to make the\n      // robot turn, but my eyes don't tell the difference anyway\n      const wheelAngle = elapsedTime * (maxVel / wheelRadius)\n      const theta = elapsedTime * (maxVel / trackRadius)\n      robot.joints['base_link_to_left_wheel'].setJointValue(wheelAngle)\n      robot.joints['base_link_to_right_wheel'].setJointValue(wheelAngle)\n      robot.position.set(trackRadius * Math.sin(theta), 0, trackRadius * Math.cos(theta))\n      robot.rotation.set(-Math.PI / 2, 0, theta)\n    }\n  })\n  return robot && <primitive object={robot} />\n}\n")),(0,r.kt)("div",{style:{height:400}},(0,r.kt)(u,{camera:{position:[0,1.2,1.2]},mdxType:"Viewer"},(0,r.kt)(i.JO,{args:[2,2],rotation:[-Math.PI/2,0,0],mdxType:"Plane"},(0,r.kt)("meshBasicMaterial",{color:"#ffb385"})),(0,r.kt)(h,{mdxType:"DynamicModel"}))),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"When doubt about the path, just open developer tools and switch to the network tab to see if the request url is correct"),(0,r.kt)("li",{parentName:"ul"},"The default coordinate system in ",(0,r.kt)("a",{parentName:"li",href:"https://threejs.org/"},"three.js")," have y-axis pointing up instead of z-axis like in most conventions, just rotate the model in x-axis by ",(0,r.kt)("inlineCode",{parentName:"li"},"-Math.PI / 2"))),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},"A react renderer for ",(0,r.kt)("a",{parentName:"li",href:"https://threejs.org/"},"three.js"),(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-2"},"The packages option is documented ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gkjohnson/urdf-loaders/tree/master/javascript#packages"},"here"),(0,r.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}R.isMDXComponent=!0}}]);